@use "sass:map";
@use "sass:math";

// Set the base spacing.
$base-gutter: 40px;

// Predefined spacing list.
$gutter: (
	sm: math.div($base-gutter, 2),
	md: 40px,
	lg: $base-gutter * 2,
	xl: $base-gutter * 3,
);

// Predefined screen sizes.
$breakpoints: (
	sm: 601px,
	md: 893px,
	lg: 1081px,
);

// Create breakpoints mixin.
@mixin media($type, $size) {
	@if $type == min-width {
		$width: #{map.get($breakpoints, $size)};

		@media (min-width: $width) {
			@content;
		}
	} @else if $type == max-width {
		$width: #{map.get($breakpoints, $size) - 1};

		@media (max-width: $width) {
			@content;
		}
	} @else {
		@content;
	}
}

.csb-card {
	padding: map.get($gutter, md);
	border-radius: 4px;
	background: #FFF;

	.csb-col & {

		@include media(min-width, md) {
			height: 100%;
		}
	}

	&__info {

		&:not(:only-child) {
			margin-top: map.get($gutter, sm);
		}
	}

	&__image {

		img {
			max-width: 100%;
			display: block;
			margin: 0 auto;
		}
	}

	&__title {
		margin: 0;
		font-size: 28px;
		font-weight: 700;
		line-height: 40px;

		&:not(:last-child) {
			margin-bottom: map.get($gutter, sm);
		}
	}

	&__description {
		margin: 0;
		font-size: 16px;
		font-weight: 600;
		line-height: 25px;

		&:not(:last-child) {
			margin-bottom: map.get($gutter, sm);
		}
	}

	// THEME: Light.
	// Prepares font color for a light color background.
	&--light {
		color: #1A1A1A;

		h3, p {
			color: #1A1A1A;
		}
	}

	// THEME: Dark.
	// Prepares font color for a dark color background.
	&--dark {
		color: #FFF;

		h3, p {
			color: #FFF;
		}
	}

	// ALIGNMENT: Center.
	// Sets all content vertical aligned to the center of the container.
	&--center {
		text-align: center;
	}
}
